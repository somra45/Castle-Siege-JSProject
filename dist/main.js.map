{"version":3,"file":"main.js","mappings":"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","sources":["webpack://castle-siege/./src/scripts/wall.js","webpack://castle-siege/./src/scripts/clock.js","webpack://castle-siege/./src/scripts/player.js","webpack://castle-siege/./src/scripts/catapult.js","webpack://castle-siege/./src/scripts/arrow.js","webpack://castle-siege/./src/scripts/health-bar.js","webpack://castle-siege/./src/scripts/game.js","webpack://castle-siege/./src/scripts/power-bar.js","webpack://castle-siege/./src/scripts/game-view.js","webpack://castle-siege/./src/scripts/angle.js","webpack://castle-siege/./src/index.js"],"sourcesContent":["export default class Wall {\r\n    constructor(health, ctx) {\r\n        this.ctx = ctx;\r\n        this.dWidth = 120;\r\n        this.dHeight = 120;\r\n        this.health = health;\r\n        this.position = [545, 330];\r\n    }\r\n\r\n    drawCastle(ctx, health) {\r\n        // let castleImage = document.getElementById('castle-image');\r\n        let castleImage = new Image();\r\n        castleImage.src = \"./src/assets/images/castle-image.png\"\r\n        if (health < 75 && health >= 33) {\r\n            // castleImage = document.getElementById('castle-image-damaged');\r\n            castleImage.src = \"./src/assets/images/castle-image-damaged.png\"\r\n        } else if (health < 33) {\r\n            // castleImage = document.getElementById('castle-image-destroyed');\r\n            castleImage.src = \"./src/assets/images/castle-image-destroyed.png\"\r\n        } \r\n        castleImage.onload = () => {\r\n            ctx.drawImage(castleImage, this.position[0], this.position[1], this.dWidth, this.dHeight);\r\n        }\r\n    };\r\n};","export {Clock, addClock}\r\n\r\nclass Clock {\r\n    constructor() {\r\n      let date = new Date();\r\n      this.hours = date.getHours();\r\n      this.minutes = date.getMinutes();\r\n      this.seconds = date.getSeconds();\r\n      this.timeString = `${this.hours}:${this.minutes}:${this.seconds}`;\r\n      this.initialSeconds = this.seconds;\r\n      this.initialMinutes = this.minutes;\r\n      this.initialHours = this.hours;\r\n      this.printTime();\r\n      setInterval(this._tick.bind(this), 1000);\r\n    };\r\n  \r\n     printTime() {\r\n      this.timeString = (this.hours + ':'+ this.minutes + ':' + this.seconds);\r\n      return this.timeString;\r\n    };\r\n  \r\n    _tick() {\r\n      this.seconds += 1;\r\n  \r\n      if (this.seconds === 60) {\r\n          this.minutes += 1;\r\n          this.seconds = 0;\r\n      };\r\n  \r\n      if (this.minutes === 60) {\r\n          this.hours += 1;\r\n          this.minutes = 0;\r\n      };\r\n\r\n      this.timeString = `${this.hours}:${this.minutes}:${this.seconds}`;\r\n      this.printTime();\r\n    };\r\n  };\r\n\r\n  const addClock = function(newElement, parentElement, className, tagName) {\r\n    const newPTag = document.createElement(`${tagName}`);\r\n    newPTag.innerText = newElement;\r\n    newPTag.classList.add(`${className}`);\r\n    if (parentElement.children.length > 0) {\r\n        parentElement.removeChild(parentElement.children[0]);\r\n        parentElement.appendChild(newPTag);\r\n    } else {\r\n      parentElement.appendChild(newPTag);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  ","import { addClock } from \"./clock.js\";\r\n\r\nexport default class Player {\r\n    constructor(game, numTurns, clock) {\r\n        this.game = game;\r\n        this.score = 0;\r\n        this.numTurns = numTurns;\r\n        this.clock = clock;\r\n        this.elapsedSeconds = 1;\r\n        this.elapsedMinutes = 0;\r\n        this.elapsedHours = 0;\r\n        this.health = 100.1\r\n    }\r\n\r\n    printScore(castle, parentElement, className) {\r\n        this.score += Math.floor((this.health - castle.health)*1000 - \r\n        (this.elapsedMinutes + 1 + this.elapsedSeconds/60) * 750)\r\n        this.health = castle.health\r\n        if (castle.health <= 0) {\r\n            this.score += 20000\r\n        }\r\n        const newPTag = document.createElement(`button`);\r\n        newPTag.innerText = `Score: ${this.score}`;\r\n        newPTag.classList.add(`${className}`);\r\n        const scoreDiv = document.querySelector(`.${parentElement}`);\r\n        if (scoreDiv.children.length > 0 ) {\r\n            scoreDiv.removeChild(scoreDiv.children[0]);\r\n            scoreDiv.appendChild(newPTag);\r\n        } else {\r\n            scoreDiv.appendChild(newPTag);\r\n        }\r\n    };\r\n\r\n    printTurns() {\r\n        this.numTurns -= 1;\r\n        const newPTag = document.createElement(`button`);\r\n        newPTag.innerText = `Turns Left: ${this.numTurns}`;\r\n        newPTag.classList.add(`turn-counter`);\r\n        const scoreDiv = document.getElementById('turns');\r\n        if (scoreDiv.children.length > 0 ) {\r\n            scoreDiv.removeChild(scoreDiv.children[0]);\r\n            scoreDiv.appendChild(newPTag);\r\n        } else {\r\n            scoreDiv.appendChild(newPTag);\r\n        }\r\n    };\r\n\r\n    printTime() {\r\n        this.elapsedSeconds += 1;\r\n        if (this.elapsedSeconds === 60) {\r\n            this.elapsedMinutes += 1;\r\n            this.elapsedSeconds = 0;\r\n        };\r\n    \r\n        if (this.elapsedMinutes === 60) {\r\n            this.elapsedHours += 1;\r\n            this.elapsedMinutes = 0;\r\n        };\r\n\r\n        this.elapsedTime = `Elapsed Time: ${this.elapsedHours}:${this.elapsedMinutes}:${this.elapsedSeconds}`;\r\n        const clockDiv = document.getElementById('elapsed-box');\r\n        addClock(this.elapsedTime, clockDiv, 'elapsed-clock', 'button');\r\n    }\r\n\r\n};","export default class Catapult {\r\n    constructor(ctx) {\r\n        this.ctx = ctx;\r\n        this.dWidth = 91;\r\n        this.dHeight = 76;\r\n        this.dx = 50;\r\n        this.dy = 360;\r\n        this.shotx = 50;\r\n        this.shoty =  360;\r\n        this.type = 'ballista';\r\n        this.velocity = 3;\r\n    }\r\n\r\n    drawBallista(ctx) {\r\n        const ballistaImage = document.getElementById('ballista-image');\r\n        ctx.drawImage(ballistaImage, this.dx, this.dy, this.dWidth, this.dHeight);\r\n    };\r\n\r\n    drawBallistaPieces(ctx) {\r\n        const ballistaFrontWheel = document.getElementById('ballista-frontwheel');\r\n        const ballistaBackWheel = document.getElementById('ballista-backwheel');\r\n        const ballistaChassis = document.getElementById('ballista-chassis');\r\n        const ballistaBow = document.getElementById('ballista-bow');\r\n        ctx.drawImage(ballistaChassis, this.dx + 4, this.dy + 23, this.dWidth/1.08, this.dHeight/1.8);\r\n        ctx.drawImage(ballistaFrontWheel, this.dx + 50, this.dy + 54, this.dWidth/4, this.dHeight/3.5);\r\n        ctx.drawImage(ballistaBackWheel, this.dx + 21, this.dy + 58, this.dWidth/5.2, this.dHeight/4.5);\r\n        ctx.save();\r\n        ctx.rotate((337 * Math.PI/180));\r\n        ctx.drawImage(ballistaBow, this.dx - 163, this.dy + 20, this.dWidth, this.dHeight/2.9);\r\n        ctx.restore();\r\n    }\r\n// add a feature to move the catapult with the arrow keys\r\n    move(velocity) {\r\n        this.dx += velocity;\r\n    };\r\n    \r\n};","export default class Arrow {\r\n    constructor(ctx) {\r\n        this.dx = 65;\r\n        this.dy = 370;\r\n        this.dWidth = 60.67;\r\n        this.dHeight = 10.86;\r\n        this.ctx = ctx;\r\n        this.draw = this.draw.bind(this);\r\n        this.draw(ctx);\r\n    };\r\n\r\n    draw(ctx) {\r\n        const ballistaSpear = document.getElementById('ballista-spear8');\r\n        ctx.drawImage(ballistaSpear, this.dx, this.dy, this.dWidth, this.dHeight);\r\n    }\r\n\r\n    launch(ctx, dirx, diry) {\r\n        const ballistaSpear = document.getElementById('ballista-spear8');\r\n        this.dx += dirx;\r\n        this.dy += diry;\r\n  \r\n        ctx.drawImage(ballistaSpear, this.dx, this.dy, this.dWidth, this.dHeight);\r\n    };\r\n\r\n    reset(ctx) {\r\n        this.dx = 65;\r\n        this.dy = 370;\r\n        this.draw(ctx);\r\n    }\r\n};","export {currentHealth};\r\n\r\nfunction currentHealth(wallHealth) {\r\n    const health = document.querySelector(\".health\");\r\n    health.style.width = `${wallHealth}%`;\r\n\r\n    const newPTag = document.createElement(\"p\");\r\n    newPTag.innerText = `Wall Health: ${wallHealth}%`;\r\n    newPTag.classList.add(\"health-indicator\");\r\n    if (health.children.length > 0) {\r\n        health.removeChild(health.children[0]);\r\n        health.appendChild(newPTag);\r\n    } else {\r\n        health.appendChild(newPTag);\r\n    }\r\n};\r\n","import Wall from \"./wall.js\";\r\nimport Player from \"./player.js\";\r\nimport Catapult from \"./catapult.js\";\r\nimport Arrow from \"./arrow.js\";\r\nimport {currentHealth} from \"./health-bar.js\";\r\n\r\nexport default class CastleSiege {\r\n    constructor(canvas) {\r\n        this.ctx = canvas.getContext(\"2d\");\r\n        this.dimensions = { width: canvas.width, height: canvas.height};\r\n        this.health = 100;\r\n        this.wall = new Wall(this.health, this.ctx);\r\n        this.player = new Player(this.ctx);\r\n        this.catapult = new Catapult(this.ctx);\r\n        this.drawBackground = this.drawBackground.bind(this);\r\n        this.drawBackground(this.ctx);\r\n        this.drawClouds(this.ctx);\r\n        this.catapult.drawBallistaPieces(this.ctx);\r\n        currentHealth(this.health);\r\n        this.arrow = new Arrow(this.ctx);\r\n        this.power = window.myPower;\r\n        this.angle = window.myAngle;\r\n        this.dirx = 0.4 * (this.power/10);\r\n        this.diry = -0.3 * (this.angle/5) * (this.power/50);\r\n        this.gravity = 0.0038 * (this.power/100) * (this.angle / 90);\r\n        this.clouddx = 1.5;\r\n        this.stop = false;\r\n        this.damage = 10;\r\n        this.hitGround = this.hitGround.bind(this);\r\n        this.hitOffScreen = this.hitOffScreen.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.gameStart();\r\n    };\r\n\r\n    drawBackground(ctx) {\r\n        let width = this.dimensions.width;\r\n        let height = this.dimensions.height;\r\n        ctx.fillStyle = 'rgb(165, 223, 249)';\r\n        ctx.fillRect(0, 0, width, height);\r\n        ctx.fillStyle = '#28b259';\r\n        ctx.fillRect(0, 390, this.dimensions.width, 200);\r\n        let wallObject = this.wall.wallobj;\r\n        this.wall.drawCastle(ctx, wallObject);\r\n    };\r\n\r\n    drawClouds(ctx, clouddx = false, truex) {\r\n        // const cloudImage = document.getElementById(\"clouds\");\r\n        const cloudImage = new Image();\r\n        let sx = 0;\r\n        let sy = 0;\r\n        let sWidth = 480;\r\n        let sHeight = 450;\r\n        let dx = 0;\r\n        let dy = 0;\r\n        let dWidth = 100;\r\n        let dHeight = 100;\r\n        if (clouddx) {\r\n            dx += clouddx % 640;\r\n        }\r\n        // need to get all of this into an animation function, and it could \r\n        //be moving clouds\r\n        truex = dx + 30;\r\n        cloudImage.onload = () => {\r\n            ctx.drawImage(cloudImage, sx, sy, sWidth, sHeight, truex, dy, \r\n                dWidth, dHeight);\r\n            truex = dx + 170;\r\n            ctx.drawImage(cloudImage, sx + 500, sy + 450, sWidth + 500, sHeight + 500,\r\n            dx + 170, dy + 90, dWidth + 200, dHeight + 200);\r\n            truex = dx + 280;\r\n            ctx.drawImage(cloudImage, sx, sy + 180, sWidth, sHeight, dx + 280, dy + 230, \r\n                dWidth, dHeight -30);\r\n            truex = dx;\r\n            ctx.drawImage(cloudImage, sx + 1000, sx + 500, sWidth + 600, sHeight + 500,\r\n                truex, dy + 110, dWidth + 100, dHeight + 100);\r\n            truex = dx + 370;\r\n            ctx.drawImage(cloudImage, 500, 650, sWidth + 680, sHeight,\r\n                truex, dy + 10, dWidth + 200, dHeight);\r\n            truex = dx + 70; \r\n            ctx.drawImage(cloudImage, sx + 465, sy + 650, sWidth + 590, sHeight,\r\n                dx + 225, dy + 78, dWidth + 200, dHeight - 20);\r\n            truex = dx + 150;\r\n            ctx.drawImage(cloudImage, sx, sy + 150, sWidth, sHeight, truex, \r\n                dy, dWidth, dHeight);\r\n            truex = dx + 57;\r\n            ctx.drawImage(cloudImage, sx, sy + 60, sWidth, sHeight, truex, \r\n                dy + 290, dWidth, dHeight);\r\n        };  \r\n        cloudImage.src = \"./src/assets/images/clouds.jpg\"\r\n    };\r\n\r\n    frameMove(ctx, timeDelta) {\r\n        ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\r\n        this.drawBackground(ctx);\r\n        this.clouddx += 0.3;\r\n        this.drawClouds(ctx, this.clouddx);\r\n        this.wall.drawCastle(ctx, this.health);\r\n        this.catapult.drawBallistaPieces(ctx);\r\n        this.diry += (this.gravity/this.gravity/45) + ((this.angle)/8000);\r\n        this.dirx -= (this.angle/10) * (this.gravity + timeDelta/100)/(this.power);\r\n        if (!this.isCollision() && !this.hitGround() && !this.hitOffScreen()) {\r\n            this.stop = false;\r\n            this.arrow.launch(ctx, this.dirx, this.diry);\r\n        } else if (this.isCollision()){\r\n            this.health -= Math.floor(this.damage * Math.random() + this.power/10);\r\n            this.playerMove(ctx);\r\n        } else if (this.hitGround() || this.hitOffScreen()) {\r\n            this.playerMove(ctx);\r\n        }\r\n    };\r\n\r\n    playerMove(ctx) {\r\n        this.stop = true;\r\n        this.arrow.launch(ctx, this.dirx, this.diry);\r\n        currentHealth(this.health);\r\n        this.reset(ctx);\r\n        this.arrow.reset(ctx);\r\n    };\r\n\r\n    isCollision() {\r\n        //wall position is 545, 330, width and height is 120 so wall ranges from\r\n        //dx = 545 => 665 \r\n        //dy = 330 => 450\r\n        let wallHitbox = [this.wall.position[0], this.wall.position[1]];\r\n        if (this.arrow.dx + 60 > wallHitbox[0] + 15 && this.arrow.dy > wallHitbox[1] + 40&& \r\n            this.arrow.dx + 60 < wallHitbox[0] + 60 && this.arrow.dy < wallHitbox[1] + 60) {\r\n            return true; \r\n        } else return false;\r\n\r\n    };\r\n\r\n    hitGround() {\r\n        if (this.arrow.dy > 435) {\r\n            return true;\r\n        } else return false;\r\n    };\r\n\r\n    hitOffScreen() {\r\n        if (this.arrow.dx > 640 || this.arrow.dx < 0 ) {\r\n            return true;\r\n        } else return false;\r\n    };\r\n\r\n    gameOver(player) {\r\n        const modalOverlay = document.querySelector(\".game-over-overlay\");\r\n        const modalReset = document.querySelector(\".game-reset-button\");\r\n        const modal = document.querySelector(\".game-over-wrapper\");\r\n        const finalScore = document.createElement(\"h1\");\r\n        finalScore.classList.add(\"game-title\");\r\n        finalScore.innerText = `Your Final Score was ${player.score}!`;\r\n        modal.appendChild(finalScore);\r\n        modalOverlay.classList.remove(\"hide\");\r\n        modalReset.addEventListener(\"click\", () => {\r\n            modalOverlay.classList.add(\"hide\");\r\n            player.numTurns = 10;\r\n            player.score = 0;\r\n            this.playerMove(this.ctx);\r\n            window.location.reload();\r\n        });\r\n    };\r\n\r\n    gameStart() {\r\n        const modalOverlay = document.querySelector(\".game-start-overlay\");\r\n        const modalReset = document.querySelector(\".game-start-button\");\r\n        const modal = document.querySelector(\".game-start-wrapper\");\r\n        const instructionsButton = document.querySelector(\".instructions-button\");\r\n        const instructions = document.createElement('div');\r\n        instructions.classList.add(\"game-inststructions-container\");\r\n        instructions.innerHTML = \r\n            `\r\n            <p><strong>Objective:</strong> Your mission is to bring down the castle \r\n            walls by accurately adjusting the angle and power of the ballista shots \r\n            until the castle's health reaches zero!</p>\r\n            \r\n            <h2>Instructions:</h2>\r\n            \r\n            <ol>\r\n              <li><strong>Select Power:</strong> Watch the power bar on the left \r\n              side of the screen. To choose the desired power level for your shot, \r\n              press the space bar when the power bar reaches your desired level. \r\n              Hitting the space bar will stop the power bar and start it again.</li>\r\n              <li><strong>Select Angle:</strong> Hover your mouse over the screen \r\n              and click to freeze the arrow above the ballista at your preferred angle. \r\n              If you want to readjust the angle, click again and move the mouse to \r\n              adjust it accordingly.</li>\r\n              <li><strong>Aim for High Score:</strong> Press Enter to Shoot.\r\n              Try to achieve the highest score possible! Direct hits on the castle \r\n              walls will earn you more points. Remember, the longer you take, the \r\n              more points you'll lose, so be swift and accurate!</li>\r\n              <li><strong>Break the Walls:</strong> You have 20 attempts to bring \r\n              down the castle walls. If you fail to achieve the objective within \r\n              these tries, the game will be over.</li>\r\n            </ol>\r\n            `;\r\n        modal.appendChild(instructions);\r\n        modalOverlay.classList.remove(\"hide\");\r\n        modalReset.addEventListener(\"click\", () => {\r\n            modalOverlay.classList.add(\"hide\")\r\n        });\r\n        instructionsButton.addEventListener(\"click\", () => \r\n            modalOverlay.classList.toggle(\"hide\")\r\n        );\r\n    };\r\n    \r\n    reset() {\r\n        this.power = window.myPower;\r\n        this.angle = window.myAngle;\r\n        this.dirx = 0.4 * (this.power/10);\r\n        this.diry = -0.3 * (this.angle/5) * (this.power/50);\r\n        this.gravity = 0.0038 * (this.power/100) * (this.angle / 90);\r\n        this.clouddx = 1;\r\n    };\r\n};","export default class PowerBar {\r\n    constructor() {\r\n        const powerBar = document.getElementById(\"power-bar\");\r\n        this.ctx = powerBar.getContext(\"2d\");\r\n        this.power = 10;\r\n        window.myPower = this.power;\r\n        this.currentPower = this.currentPower.bind(this);\r\n        this.currentPower();\r\n        this.oscillate = this.oscillate.bind(this);\r\n        this.upwards = true;\r\n        this.downwards = false;\r\n        this.stop = false;\r\n    };\r\n\r\n    currentPower() {\r\n        this.ctx.clearRect(0, 0, 45, 480);\r\n        this.ctx.fillStyle = \"red\";\r\n        let height = -480 * (this.power/100);\r\n        this.ctx.fillRect(0, 480, 45, height);\r\n        const div = document.getElementById('power-canvas');\r\n        const printPower = document.createElement(\"p\");\r\n        printPower.innerText = `${Math.floor(this.power)}`;\r\n        printPower.classList.add('power-indicator')\r\n        if (div.children.length > 1) {\r\n            div.removeChild(div.children[1]);\r\n            div.appendChild(printPower);\r\n        } else {\r\n            div.appendChild(printPower);\r\n        }\r\n        window.myPower = this.power;\r\n    };\r\n\r\n    oscillate() {\r\n        this.acceleration = 1.05;\r\n        this.accelerator = 1;\r\n        this.deceleration = 0.95;\r\n        if (!this.stop) {\r\n            if (this.upwards) {\r\n                if ((Math.pow(this.acceleration, this.accelerator) * this.power) <= 100) {\r\n                    this.power *= Math.pow(this.acceleration, this.accelerator);\r\n                } else {\r\n                    this.upwards = false;\r\n                    this.downwards = true;\r\n                    this.accelerator = 1;\r\n                }\r\n            }\r\n            if (this.downwards) {\r\n                if ((Math.pow(this.deceleration, this.accelerator) * this.power) >= 15) {\r\n                    this.power *= Math.pow(this.deceleration, this.accelerator);\r\n                } else {\r\n                    this.downwards = false;\r\n                    this.upwards = true;\r\n                    this.accelerator = 1;\r\n                }\r\n            };\r\n        };\r\n        this.currentPower();\r\n        this.accelerator += 1;\r\n    };\r\n};\r\n\r\n\r\n","export default class GameView {\r\n    constructor(game, ctx, clock) {\r\n        this.game = game;\r\n        this.ctx = ctx;\r\n        this.clock = clock;\r\n    };\r\n\r\n    start() {\r\n        this.lastTime = this.clock.minutes + this.clock.seconds/60;\r\n        this.game.reset();\r\n        this.game.start = true;\r\n        this.clock.initialSeconds = this.clock.seconds;\r\n        this.clock.initialHours = this.clock.hours;\r\n        this.clock.initialMinutes = this.clock.minutes;\r\n        requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n\r\n    animate() {\r\n        const timeDelta = this.clock.minutes + this.clock.seconds/60\r\n        - this.lastTime;\r\n        this.game.frameMove(this.ctx, timeDelta);\r\n        if (!this.game.stop) {\r\n            requestAnimationFrame(this.animate.bind(this));\r\n        }\r\n    };\r\n};","export default class Angle {\r\n    constructor(game) {\r\n        this.angle = 15;\r\n        this.stop = false;\r\n        this.getMousePos = this.getMousePos.bind(this);\r\n        this.drawAngle = this.drawAngle.bind(this);\r\n        this.game = game;\r\n    }\r\n    \r\n    getMousePos(event) {\r\n        const angleIndicator = document.createElement('canvas');\r\n        angleIndicator.classList.add('angle-indicator');\r\n        angleIndicator.height = '480';\r\n        angleIndicator.width = '640';\r\n        this.canvas = angleIndicator;\r\n        const angleDiv = document.getElementById('angle-div');\r\n        if (angleDiv.children.length > 0) {\r\n            angleDiv.removeChild(angleDiv.children[0]);\r\n            angleDiv.appendChild(angleIndicator);\r\n        } else {\r\n            angleDiv.appendChild(angleIndicator);\r\n        }\r\n        const context = angleIndicator.getContext('2d');    \r\n        const rectangle = angleIndicator.getBoundingClientRect();\r\n        context.mouseObj =  { \r\n            x: event.clientX - rectangle.left,\r\n            y: event.clientY - rectangle.top\r\n        };\r\n        return context;\r\n    };\r\n\r\n    drawAngle(ctx) {\r\n    if (ctx.mouseObj.x >= 65 && ctx.mouseObj.y <= 370) {\r\n        let deltaX = ctx.mouseObj.x - 65;\r\n        let deltaY = 370 - ctx.mouseObj.y;\r\n        let radians = Math.atan2(deltaY, deltaX);\r\n        let angle = radians * (180 / Math.PI);\r\n        if (angle > 75) {\r\n            angle = 75;\r\n            radians = 75 / (180 / Math.PI);\r\n        } else if (angle < 15) {\r\n            angle = 25;\r\n            radians = 25 / (180 / Math.PI);\r\n        }\r\n        window.myAngle = angle;\r\n        let vectorX = 65 + 50 * Math.cos(radians)\r\n        let vectorY = 370 - 50 * Math.sin(radians)\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = '#0c662a';\r\n            ctx.lineWidth = 5;\r\n            ctx.moveTo(65, 370);\r\n            ctx.lineTo(vectorX, vectorY);\r\n            ctx.stroke();\r\n            ctx.lineTo(vectorX - 20, vectorY*1.035 - 12);\r\n            ctx.stroke();\r\n            ctx.moveTo(vectorX, vectorY)\r\n            ctx.lineTo(vectorX* 0.85 + 15, vectorY*1.031 + 12);\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n        };\r\n        let that = this;\r\n        this.canvas.addEventListener(\"mousedown\", function(event) {\r\n            that.stop = !that.stop;\r\n            that.game.angle = window.myAngle;\r\n        });\r\n    };\r\n};\r\n","import CastleSiege from \"./scripts/game.js\";\r\nimport {addClock, Clock} from \"./scripts/clock.js\";\r\nimport PowerBar from \"./scripts/power-bar.js\";\r\nimport GameView from \"./scripts/game-view.js\";\r\nimport Angle  from \"./scripts/angle.js\";\r\nimport Player from \"./scripts/player.js\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n    const canvas = document.getElementById(\"siege-game\");\r\n    const castle1 = new CastleSiege(canvas);\r\n    const clockDiv = document.getElementById(\"clock-container\");\r\n    const clock = new Clock();\r\n    const player1 = new Player(castle1, 20, clock);\r\n    const angle = new Angle(castle1);\r\n    const powerBar = new PowerBar();\r\n    const devLinks = document.querySelector(\".links\");\r\n\r\n    addClock(clock.timeString, clockDiv, 'siege-clock', 'button');\r\n\r\n    setInterval(() => addClock(clock.timeString, clockDiv, 'siege-clock', 'button') , 1000);\r\n\r\n    setInterval(() => powerBar.oscillate(), 40)\r\n\r\n    document.addEventListener(\"mouseover\", function(event) {\r\n        if (!angle.stop) {\r\n            const angleContext = angle.getMousePos(event);\r\n            angle.drawAngle(angleContext);\r\n        }; \r\n    });\r\n\r\n    document.addEventListener(\"keydown\", function(event) {\r\n        if (event.code === 'Space') {\r\n            powerBar.stop = !powerBar.stop;\r\n            powerBar.currentPower();\r\n        }\r\n    });\r\n\r\n    setInterval(() => {\r\n        if (player1.game.start) {\r\n            player1.printTime()\r\n        }\r\n    } , 1000);\r\n\r\n    document.addEventListener(\"keydown\", function(event) { \r\n        if (event.code === 'Enter') {\r\n            if (player1.numTurns > 1) {\r\n                const shot = new GameView(castle1, castle1.ctx, clock);\r\n                powerBar.stop = false;\r\n                angle.stop = false;\r\n                shot.start();\r\n                player1.printScore(castle1, 'score-box', 'score');\r\n                player1.printTurns();\r\n            } else if (player1.numTurns === 1 || castle1.health <= 0){\r\n                const shot = new GameView(castle1, castle1.ctx, clock);\r\n                powerBar.stop = true;\r\n                angle.stop = true;\r\n                shot.start();\r\n                player1.printScore(castle1, 'score-box', 'score');\r\n                player1.printTurns();\r\n                castle1.gameOver(player1);\r\n            }\r\n        }\r\n    });\r\n\r\n    devLinks.addEventListener(\"click\", function () {\r\n        const linksContainer = document.querySelector(\".links-container\");\r\n        linksContainer.classList.toggle(\"hide-links\")\r\n    });\r\n});\r\n\r\n\r\n"],"names":["Wall","constructor","health","ctx","this","dWidth","dHeight","position","drawCastle","castleImage","Image","src","onload","drawImage","Clock","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","timeString","initialSeconds","initialMinutes","initialHours","printTime","setInterval","_tick","bind","addClock","newElement","parentElement","className","tagName","newPTag","document","createElement","innerText","classList","add","children","length","removeChild","appendChild","Player","game","numTurns","clock","score","elapsedSeconds","elapsedMinutes","elapsedHours","printScore","castle","Math","floor","scoreDiv","querySelector","printTurns","getElementById","elapsedTime","clockDiv","Catapult","dx","dy","shotx","shoty","type","velocity","drawBallista","ballistaImage","drawBallistaPieces","ballistaFrontWheel","ballistaBackWheel","ballistaChassis","ballistaBow","save","rotate","PI","restore","move","Arrow","draw","ballistaSpear","launch","dirx","diry","reset","currentHealth","wallHealth","style","width","CastleSiege","canvas","getContext","dimensions","height","wall","player","catapult","drawBackground","drawClouds","arrow","power","window","myPower","angle","myAngle","gravity","clouddx","stop","damage","hitGround","hitOffScreen","gameStart","fillStyle","fillRect","wallObject","wallobj","arguments","undefined","truex","cloudImage","sWidth","sHeight","sx","sy","frameMove","timeDelta","clearRect","isCollision","random","playerMove","wallHitbox","gameOver","modalOverlay","modalReset","modal","finalScore","remove","addEventListener","location","reload","instructionsButton","instructions","innerHTML","toggle","PowerBar","powerBar","currentPower","oscillate","upwards","downwards","div","printPower","acceleration","accelerator","deceleration","pow","GameView","start","lastTime","requestAnimationFrame","animate","Angle","getMousePos","drawAngle","event","angleIndicator","angleDiv","context","rectangle","getBoundingClientRect","mouseObj","x","clientX","left","y","clientY","top","deltaX","deltaY","radians","atan2","vectorX","cos","vectorY","sin","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","that","castle1","player1","devLinks","angleContext","code","shot"],"sourceRoot":""}